using System.Collections.Generic;
using System.Reflection;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.OpenApi.Models;
using Onion.Web.Extensions;

namespace Onion.Web
{
    /// <summary>
    /// Swagger start up.
    /// </summary>
    public partial class Startup
    {
        private void ConfigureSwagger(IServiceCollection services)
        {
            services.AddSwaggerGen(c =>
            {
                // Locate the XML file being generated by ASP.NET.
                c.LoadXmlComments(Assembly.GetExecutingAssembly());
                c.LoadXmlComments(typeof(Domain.Common.BaseEntity));
                c.LoadXmlComments(typeof(Application.DependencyInjection));
                c.LoadXmlComments(typeof(Data.DependencyInjection));
                c.LoadXmlComments(typeof(Identity.DependencyInjection));
                c.LoadXmlComments(typeof(Infrastructure.DependencyInjection));

                c.CustomSchemaIds(SwaggerGenExtensions.SchemaIdSelector);
                c.SwaggerDoc("v1", new OpenApiInfo
                {
                    Version = "v1",
                    Title = "Onion",
                });

                c.AddSecurityDefinition("Bearer", new OpenApiSecurityScheme
                {
                    Name = "Authorization",
                    In = ParameterLocation.Header,
                    Type = SecuritySchemeType.ApiKey,
                    Scheme = "Bearer",
                    BearerFormat = "JWT",
                    Description =
                        "Input your Bearer token in this format - Bearer {your token here} to access this API",
                });

                c.AddSecurityRequirement(new OpenApiSecurityRequirement
                {
                    {
                        new OpenApiSecurityScheme
                        {
                            Reference = new OpenApiReference
                            {
                                Type = ReferenceType.SecurityScheme,
                                Id = "Bearer",
                            },
                            Scheme = "Bearer",
                            Name = "Bearer",
                            In = ParameterLocation.Header,
                        },
                        new List<string>()
                    },
                });
            });
        }
    }
}